name: CI + Vercel Deploy

on:
  pull_request:
    branches: [main, development] # CI on PRs
  push:
    branches: [main, development] # deploys only on push

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: CI (Install → Prisma Generate → Build → Test)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn prisma generate
      - run: yarn type-check
        env:
          NEXT_TELEMETRY_DISABLED: 1
      - run: yarn build
        env:
          NEXT_TELEMETRY_DISABLED: 1
      - run: yarn test

  deploy-preview:
    name: Deploy Preview (development)
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }} # team_...
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }} # prj_...
    steps:
      - uses: actions/checkout@v4
      - run: rm -rf .vercel
      - run: npm i -g vercel@latest
      # optional once: verify token+scope
      - run: vercel whoami --token "$VERCEL_TOKEN"
      - run: vercel projects ls --scope "$VERCEL_ORG_ID" --token "$VERCEL_TOKEN" | head -n 20
      - run: vercel pull --yes --environment=preview --scope "$VERCEL_ORG_ID" --project "$VERCEL_PROJECT_ID" --token "$VERCEL_TOKEN"
      - run: vercel build --scope "$VERCEL_ORG_ID" --project "$VERCEL_PROJECT_ID" --token "$VERCEL_TOKEN"
      - run: vercel deploy --prebuilt --scope "$VERCEL_ORG_ID" --project "$VERCEL_PROJECT_ID" --token "$VERCEL_TOKEN"

  deploy-production:
    name: Deploy Production (main)
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
      - run: rm -rf .vercel
      - run: npm i -g vercel@latest
      - run: vercel pull --yes --environment=production --scope "$VERCEL_ORG_ID" --project "$VERCEL_PROJECT_ID" --token "$VERCEL_TOKEN"
      - run: vercel build --prod --scope "$VERCEL_ORG_ID" --project "$VERCEL_PROJECT_ID" --token "$VERCEL_TOKEN"
      - run: vercel deploy --prebuilt --prod --scope "$VERCEL_ORG_ID" --project "$VERCEL_PROJECT_ID" --token "$VERCEL_TOKEN"
