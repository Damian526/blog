name: CI + Vercel Deploy

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: CI (Install → Prisma Generate → Build → Test)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn prisma generate
      - run: yarn type-check
        env: { NEXT_TELEMETRY_DISABLED: 1 }
      - run: yarn build
        env: { NEXT_TELEMETRY_DISABLED: 1 }
      - run: yarn test

  deploy-preview:
    name: Deploy Preview (develop)
    needs: test
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm i -g vercel@latest
      - run: vercel pull --yes --environment=preview --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      - run: vercel build --token ${{ secrets.VERCEL_TOKEN }}
      - run: vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }}

  deploy-production:
    name: Deploy Production (main)
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm i -g vercel@latest
      - run: vercel pull --yes --environment=production --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      - run: vercel build --prod --token ${{ secrets.VERCEL_TOKEN }}
      - run: vercel deploy --prebuilt --prod --token ${{ secrets.VERCEL_TOKEN }}
